1. Check out my branch
$ git clean -f
$ git add . //to upload all files into staging area
$ git commit -m "My own patch version for 35L"

2. Check out v3.0 into quote
$ cd ../diffutils_original/
$ git checkout v3.0 -b quote

3. Apply patch to this branch
$ patch -p1 < ../quote-3.0-patch.txt
patching file src/cmp.c
patching file src/diff.c
patching file src/diff3.c
patching file src/dir.c
patching file src/sdiff.c
patching file src/util.c

4. ChangeLog command
Reading the document, I found out that:
C-x 4 a visits the change log file and creates a new entry unless the most recent entry is for today's date and your name.

5. Create changelog
$ emacs change.txt
C-x 4 a
Then write similar to original ChangeLog in quote-patch.txt:

2019-11-18  Rui Deng  <classrui@lnxsrv05.seas.ucla.edu>

 maint: quote 'like this' or "like this", not `like this'
    
    This is in response to a recent change in the GNU coding standards,
    which now suggest quoting 'like this' or "like this", instead of
    `like this' or ``like this''.
    * src/cmp.c (try_help, specify_ignore_initial, usage, main):
    * src/diff.c (main, try_help, option_help_msgid, specify_value)
    (compare_files):
    * src/diff3.c (main, try_help, option_help_msgid, usage)
    (read_diff):
    * src/dir.c (compare_names):
    * src/sdiff.c (try_help, usage, check_child_status, main):
    * src/util.c (finish_output):
     Quote 'like this' in output.

6. Commit with ChangeLog:
$ git commit -aF ChangeLog
-F commands means using the text in ChangeLog as the label for this command.

7. Generate patch:
$ git format-patch -1 --stdout > ../formatted-patch.txt
--stdout is used to put all differences inside one patch, instead of putting them into different files.

8. Build with partner's patch:
My partner's name is Mingyang Zhang, and his UID is 405170429.
Create a new branch to test:
$ git checkout v3.0 -b Mingyang
Apply the patch and build the program:
$ git am < ../formatted-patch-Mingyang.txt 
$ ./bootstrap
$ ./configure
$ make
$ make check
Then test his program:
$ src/diff . -
src/diff: cannot compare '-' to a directory
$ src/diff --help
And his program changes all ` to ', so his patch applies correctly in my system.

9. Verify ChangeLog
Switch back to my own branch:
$ git checkout quote
$ make distdir
Here, a new directory diffutils-3.0.1-165c is created. So cd into it:
$ cd diffutils-3.0.1-165c/
$ less ChangeLog
And my version of ChangeLog appears as the first entry in this file, so it works.

10. mergepoint and subwindows
Logging into the linux server with -X option, then go to the required directory:
$ cd ~eggert/src/gnu/emacs
$ gitk
The newest merger before 2015.01.25 is Merge branch 'master' into xwidget:
Author: Joakim Verona <joakim@verona.se>  2015-01-25 12:19:27
Committer: Joakim Verona <joakim@verona.se>  2015-01-25 12:19:27

The upper subwindow shows a series of commits with corresponding messages, and it also shows the author, user email, and date of this commit. Moreover, right below this subwindos displays the SHA1 ID of this commit.
The lower subwindow shows the details of this commit, with corresponding ChangeLog and the diff file content. Specifically, it displays author, committer, parent, child, branches, follows, precedes of a commit followed by the content of this change. 






